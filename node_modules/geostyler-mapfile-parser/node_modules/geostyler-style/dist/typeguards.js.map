{"version":3,"file":"typeguards.js","sourceRoot":"","sources":["../typeguards.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Contains typeguards for geostyler-style\n * https://basarat.gitbook.io/typescript/type-system/typeguard#user-defined-type-guards\n */\n\nimport _isString from 'lodash/isString';\nimport _isNumber from 'lodash/isNumber';\nimport _isBoolean from 'lodash/isBoolean';\nimport _isRegExp from 'lodash/isRegExp';\n\nimport {\n  BasePointSymbolizer,\n  BaseSymbolizer,\n  ChannelSelection,\n  CombinationFilter,\n  CombinationOperator,\n  ComparisonFilter,\n  ComparisonOperator,\n  FillSymbolizer,\n  Filter,\n  FunctionFilter,\n  GrayChannel,\n  IconSymbolizer,\n  LineSymbolizer,\n  MarkSymbolizer,\n  NegationFilter,\n  NegationOperator,\n  Operator,\n  PropertyValue,\n  RasterSymbolizer,\n  RGBChannel,\n  Rule,\n  ScaleDenominator,\n  StrMatchesFunctionOperator,\n  TextSymbolizer\n} from './style';\n\n// PropertyValue\nexport const isPropertyValue = (got: any): got is PropertyValue => {\n  return _isString(got) || _isNumber(got) || _isBoolean(got) || got === null;\n};\n\n// ScaleDenominator\nexport const isScaleDenominator = (got: any): got is ScaleDenominator => {\n  return (got?.min || got?.max) &&\n    (got.min ? isFilter(got.min) : true) &&\n    (got.max ? isFilter(got.max) : true);\n};\n\n// Operators\nexport const isOperator = (got: any): got is Operator => {\n  return isComparisonOperator(got) ||\n    isCombinationOperator(got) ||\n    isStrMatchesFunctionOperator(got) ||\n    isNegationOperator(got);\n};\nexport const isComparisonOperator = (got: any): got is ComparisonOperator => {\n  return ['==', '*=' , '!=' , '<' , '<=' , '>' , '>=', '<=x<='].includes(got);\n};\nexport const isCombinationOperator = (got: any): got is CombinationOperator => {\n  return ['&&', '||'].includes(got);\n};\nexport const isNegationOperator = (got: any): got is NegationOperator => {\n  return got === '!';\n};\nexport const isStrMatchesFunctionOperator = (got: any): got is StrMatchesFunctionOperator => {\n  return got === 'FN_strMatches';\n};\n\n// Filters\nexport const isFilter = (got: any): got is Filter => {\n  return isComparisonFilter(got) ||\n    isCombinationFilter(got) ||\n    isFunctionFilter(got) ||\n    isNegationFilter(got);\n};\nexport const isComparisonFilter = (got: any): got is ComparisonFilter => {\n  const expectedLength = got && got[0] === '<=x<=' ? 4 : 3;\n  return Array.isArray(got) &&\n    got.length === expectedLength &&\n    isComparisonOperator(got[0]) &&\n    (isFunctionFilter(got[1]) || _isString(got[1])) &&\n    isPropertyValue(got[2]) &&\n    (got[0] !== '<=x<=' || _isNumber(got[3]));\n};\nexport const isCombinationFilter = (got: any): got is CombinationFilter => {\n  return Array.isArray(got) &&\n    got.length >= 3 &&\n    isCombinationOperator(got[0]) &&\n    got.every((arg, index) => index === 0 || isFilter(arg));\n};\nexport const isNegationFilter = (got: any): got is NegationFilter => {\n  return Array.isArray(got) &&\n    got.length === 2 &&\n    isNegationOperator(got[0]) &&\n    isFilter(got[1]);\n};\nexport const isFunctionFilter = (got: any): got is FunctionFilter => {\n  return Array.isArray(got) &&\n    got.length === 3 &&\n    isStrMatchesFunctionOperator(got[0]) &&\n    _isString(got[1]) &&\n    _isRegExp(got[2]);\n};\n\n// Symbolizers\nexport const isSymbolizer = (got: any): got is BaseSymbolizer => {\n  return ['Fill', 'Icon', 'Line', 'Text', 'Mark', 'Raster'].includes(got?.kind);\n};\nexport const isPointSymbolizer = (got: any): got is BasePointSymbolizer => {\n  return ['Icon', 'Text', 'Mark'].includes(got?.kind);\n};\nexport const isIconSymbolizer = (got: any): got is IconSymbolizer => {\n  return got?.kind === 'Icon';\n};\nexport const isTextSymbolizer = (got: any): got is TextSymbolizer => {\n  return got?.kind === 'Text';\n};\nexport const isMarkSymbolizer = (got: any): got is MarkSymbolizer => {\n  return got?.kind === 'Mark' && _isString(got?.wellKnownName);\n};\nexport const isLineSymbolizer = (got: any): got is LineSymbolizer => {\n  return got?.kind === 'Line';\n};\nexport const isFillSymbolizer = (got: any): got is FillSymbolizer => {\n  return got?.kind === 'Fill';\n};\nexport const isRasterSymbolizer = (got: any): got is RasterSymbolizer => {\n  return got?.kind === 'Raster';\n};\n\n// Rule\nexport const isRule = (got: any): got is Rule => {\n  return _isString(got?.name) &&\n    (got?.filter ? isFilter(got.filter) : true) &&\n    (got?.scaleDenominator ? isScaleDenominator(got.scaleDenominator) : true) &&\n    got?.symbolizers.every((arg: any) => isSymbolizer(arg));\n};\n\n/**\n * Checks if ChannelSelection is of type RGBChannel.\n */\nexport const isRgbChannel = (channels: ChannelSelection): channels is RGBChannel => {\n  return (\n    (channels as RGBChannel).redChannel !== undefined\n      || (channels as RGBChannel).greenChannel !== undefined\n      || (channels as RGBChannel).blueChannel !== undefined\n  );\n};\n\n/**\n * Checks if ChannelSelection is of type GrayChannel.\n */\nexport const isGrayChannel = (channels: ChannelSelection): channels is GrayChannel => {\n  return (channels as GrayChannel).grayChannel !== undefined;\n};\n"]}