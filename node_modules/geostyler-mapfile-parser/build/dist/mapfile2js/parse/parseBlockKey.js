"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseBlockKey = void 0;
var Logger_1 = __importDefault(require("@terrestris/base-util/dist/Logger"));
// there can be multiple layer, class and style block siblings
var multiBlockKeys = {
    layer: 'layers',
    class: 'classes',
    label: 'labels',
    style: 'styles',
    symbol: 'symbols',
    outputformat: 'outputformats',
    formatoption: 'formatoptions',
    include: 'includes',
    processing: 'processings',
};
/**
 * Parse block keys.
 * @param {LineObject} lineObject Line Object
 * @param {array} lines Array of line strings
 * @param {array} blocks Block stack
 */
function parseBlockKey(lineObject, currentBlock) {
    // test for unhadled block lines
    if (lineObject.isBlockLine) {
        Logger_1.default.error("Not able to deal with the following Block line: " + lineObject.content);
        return;
    }
    // handle multi block keys
    if (lineObject.key in multiBlockKeys) {
        var pluralKey = multiBlockKeys[lineObject.key];
        if (!(pluralKey in currentBlock)) {
            currentBlock[pluralKey] = []; // add list
        }
        if (lineObject.isBlockKey) {
            currentBlock[pluralKey].push({}); // add block to list
            return currentBlock[pluralKey][currentBlock[pluralKey].length - 1]; // return new block
        }
        else {
            currentBlock[pluralKey].push(lineObject.value); // list key value
            return undefined;
        }
    }
    else {
        // check for duplicate block key
        if (lineObject.key in currentBlock || multiBlockKeys[lineObject.key] in currentBlock) {
            Logger_1.default.error("Overwriting block! Add '" + lineObject.key + "' to multi block keys!");
        }
        // create block
        currentBlock[lineObject.key] = {};
        // return new block
        return currentBlock[lineObject.key];
    }
}
exports.parseBlockKey = parseBlockKey;
//# sourceMappingURL=parseBlockKey.js.map