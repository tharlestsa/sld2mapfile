/**
 * Contains typeguards for geostyler-style
 * https://basarat.gitbook.io/typescript/type-system/typeguard#user-defined-type-guards
 */
import { BasePointSymbolizer, BaseSymbolizer, ChannelSelection, CombinationFilter, CombinationOperator, ComparisonFilter, ComparisonOperator, FillSymbolizer, Filter, GrayChannel, IconSymbolizer, LineSymbolizer, MarkSymbolizer, NegationFilter, Operator, PropertyValue, RasterSymbolizer, RGBChannel, Rule, ScaleDenominator, TextSymbolizer } from './style';
export declare const isPropertyValue: (got: any) => got is PropertyValue;
export declare const isScaleDenominator: (got: any) => got is ScaleDenominator;
export declare const isOperator: (got: any) => got is Operator;
export declare const isComparisonOperator: (got: any) => got is ComparisonOperator;
export declare const isCombinationOperator: (got: any) => got is CombinationOperator;
export declare const isNegationOperator: (got: any) => got is "!";
export declare const isStrMatchesFunctionOperator: (got: any) => got is "FN_strMatches";
export declare const isFilter: (got: any) => got is Filter;
export declare const isComparisonFilter: (got: any) => got is ComparisonFilter;
export declare const isCombinationFilter: (got: any) => got is CombinationFilter;
export declare const isNegationFilter: (got: any) => got is NegationFilter;
export declare const isFunctionFilter: (got: any) => got is import("./style").StrMatchesFunctionFilter;
export declare const isSymbolizer: (got: any) => got is BaseSymbolizer;
export declare const isPointSymbolizer: (got: any) => got is BasePointSymbolizer;
export declare const isIconSymbolizer: (got: any) => got is IconSymbolizer;
export declare const isTextSymbolizer: (got: any) => got is TextSymbolizer;
export declare const isMarkSymbolizer: (got: any) => got is MarkSymbolizer;
export declare const isLineSymbolizer: (got: any) => got is LineSymbolizer;
export declare const isFillSymbolizer: (got: any) => got is FillSymbolizer;
export declare const isRasterSymbolizer: (got: any) => got is RasterSymbolizer;
export declare const isRule: (got: any) => got is Rule;
/**
 * Checks if ChannelSelection is of type RGBChannel.
 */
export declare const isRgbChannel: (channels: ChannelSelection) => channels is RGBChannel;
/**
 * Checks if ChannelSelection is of type GrayChannel.
 */
export declare const isGrayChannel: (channels: ChannelSelection) => channels is GrayChannel;
